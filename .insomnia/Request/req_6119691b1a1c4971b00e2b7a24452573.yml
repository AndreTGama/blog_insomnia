_id: req_6119691b1a1c4971b00e2b7a24452573
type: Request
parentId: fld_13436fb6bfb74bc6b5993cb13fa756b3
modified: 1694100066703
created: 1690051084712
url: "{{ _._local }}/api/users/4"
name: Delete One
description: >-
  ## Route to Deactivate User Information


  This route allows you to deactivate user information in the system based on their ID.


  - **Route:** `/api/users/{id}`

  - **HTTP Method:** `DELETE`


  ### Parameter


  - `{id}` (required) - The unique ID of the user you want to deactivate.


  ## Workflow


  1. The client makes a DELETE request to `/api/users/{id}`, specifying the ID of the user they want to deactivate as part of the URL.

  2. The controller calls the `delete` function with the provided ID as a parameter.

  3. The controller attempts to locate the user with the specified ID using `User::findOrFail($id)`.

  4. If the user is found, the record is marked as deactivated (usually through an "active" column in the database), and the record is permanently deactivated.

  5. A successful response (status code 200) is returned to the client with a message indicating that the account has been deactivated successfully.

  6. If the user is not found, a successful response will still be returned, indicating that the account no longer exists in the system.


  ## Return


  ```typescript 

  {
  	error: boolean,
  	message: string,
  	developerMessage: string,
  	exception: string | null,
  	data: null
  }
method: DELETE
body:
  mimeType: application/json
  text: "\t"
parameters: []
headers:
  - name: Content-Type
    value: application/json
    id: pair_aa4f6db52b6d4d61b5b7378cfe463f62
    disabled: false
authentication:
  type: bearer
  token: "{{ _.token }}"
metaSortKey: -1689290260572.75
isPrivate: false
settingStoreCookies: true
settingSendCookies: true
settingDisableRenderRequestBody: false
settingEncodeUrl: true
settingRebuildPath: true
settingFollowRedirects: global
