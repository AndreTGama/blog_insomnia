_id: req_b6195e6aa84c40b3bd53c19916653b83
type: Request
parentId: fld_ad934523071845189312e0c73bb70886
modified: 1693753939061
created: 1689289675800
url: "{{ _._local }}/api/users/reset-password"
name: Forgot Password
description: >-
  # Send E-mail to Reset password


  This route allows the user to request a password reset by providing their email. An email containing a password reset code will be sent to the user.


  ## HTTP Methods


  - **POST**: This method is used to send the necessary data to create a new user from the client to the server.


  ## Parameters


  The request must include the following parameters in the body (JSON):


  - **email**: The email address of the new user, which is usually used for communication and 


  ## Workflow


  This workflow outlines the steps involved in the password reset process when a user requests a password reset by providing their email.


  1. **User Request**: The user initiates the password reset process by making a POST request to the `/api/users/reset-password` route with their email included in the request body.


  2. **Server Validation**: The server receives the request and checks if the provided email exists in the system's database.

     - If the email does not exist in the system, the server responds with an appropriate error message (e.g., `404 Not Found`) indicating that the email was not found in the system.

     - If the email exists, the server proceeds to the next step.

  3. **Password Reset Code Generation**: The server generates a unique password reset code, which is associated with the user's email. This code is typically a random or unique identifier.


  4. **Code Storage**: The generated password reset code is temporarily stored in a secure location, such as a database or cache, along with a timestamp indicating when it was created. This allows the server to verify the code's validity and expiration.


  5. **Email Notification**: An email containing the password reset instructions and the generated code is sent to the user's provided email address. This email includes a link or instructions for the user to complete the password reset process.


  This workflow outlines the steps involved in the password reset process, from the initial user request to the successful password update. It ensures security and user-friendly communication throughout the process.


  ## Return


  ```typeScript 

  {
  	error: boolean,
  	message: string,
  	developerMessage: string,
  	exception: string | null,
  	data: null
  }
method: POST
body:
  mimeType: application/json
  text: |-
    {
    	"email": "abshire.holly@example.net"
    }
parameters: []
headers:
  - name: Content-Type
    value: application/json
authentication: {}
metaSortKey: -1689289675800
isPrivate: false
settingStoreCookies: true
settingSendCookies: true
settingDisableRenderRequestBody: false
settingEncodeUrl: true
settingRebuildPath: true
settingFollowRedirects: global
